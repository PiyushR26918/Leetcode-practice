/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null){
            return head;
        }
        ListNode first = head;
        ListNode second = head.next;
        ListNode temp = second.next;
        ListNode prev = null;
        ListNode newHead = second;

        while (temp != null){
            second.next = first;
            first.next = temp;
            if (prev != null){
                prev.next = second;
            }
            prev = first;
            first = temp;
            second = first.next;
            if (second == null){
                temp = null;
            }
            else{
                temp = second.next;
            }
        }
        if (second != null){
            second.next = first;
            first.next = temp;
            if (prev != null){
                prev.next = second;
            }
        }
        
        return newHead;    
    }
}
