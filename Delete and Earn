class Solution {
    public int deleteAndEarn(int[] nums) {
        int maxVal = 0;
        HashMap<Integer,Integer> map = new HashMap<>();
        for (int i=0; i<nums.length; i++){
            maxVal= Math.max(maxVal, nums[i]);
        }
        int[] sum = new int[maxVal+1];
        for (int i=0; i<nums.length; i++){
            sum[nums[i]] = sum[nums[i]] + nums[i]; 
        }

        return helper(sum, 0, map);
        
    }
    int helper(int[] sum, int index,HashMap<Integer,Integer> map){
        if (index >= sum.length){
            return 0;
        }
        if (map.containsKey(index)){
            return map.get(index);
        }
        int take = helper(sum, index + 2, map) + sum[index];
        int leave = helper(sum, index + 1, map);
        map.put(index, Math.max(take, leave));
        return map.get(index);
    }
}
