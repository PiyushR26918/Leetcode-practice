class Solution {
    public int[][] merge(int[][] intervals) {
        List<int[]> result = new ArrayList<>();
        Arrays.sort(intervals, (a,b)->a[0]-b[0]);

        for (int[] interval : intervals){
            if (result.isEmpty() || interval[0]>result.get(result.size()-1)[1]){
                result.add(interval);
            }
            else{
                result.get(result.size()-1)[1] = Math.max(result.get(result.size()-1)[1], interval[1]);
            }
        }
        int[][] overlaps = new int[result.size()][2];
        for (int i=0; i<overlaps.length; i++){
            for (int j=0; j<overlaps[0].length; j++){
                int first = result.get(i)[0];
                int second = result.get(i)[1];
                overlaps[i][0] = first;
                overlaps[i][j] = second;
            }
        }
        return overlaps;
    }
}
